{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport initializeAuthentication from \"../Firebase/firebase.init\";\nimport { getAuth, signInWithPopup, GoogleAuthProvider, onAuthStateChanged } from \"firebase/auth\";\ninitializeAuthentication();\n\nconst useFirebase = () => {\n  _s();\n\n  const [user, setUser] = useState({});\n  const [error, setError] = useState('');\n  const auth = getAuth();\n  const googleProvider = new GoogleAuthProvider();\n\n  const signInUsingGoogle = () => {\n    signInWithPopup(auth, googleProvider).then(result => {\n      console.log(result.user);\n      setUser(result.user);\n    }).catch(error => {\n      setError(error.massage);\n    });\n  };\n\n  useEffect(() => {\n    onAuthStateChanged(auth, user => {\n      if (user) {\n        console.log('inside state change ');\n        setUser(user);\n      }\n    });\n  }, []);\n  return {\n    user,\n    error,\n    signInUsingGoogle\n  };\n};\n\n_s(useFirebase, \"A5Nbqwroq4Gv2g7ET4JzXU91Ono=\");\n\nexport default useFirebase;","map":{"version":3,"sources":["/home/abir/Study/Web/Programming hero/react-authentication/src/Components/Hook/UseFirebase.js"],"names":["useEffect","useState","initializeAuthentication","getAuth","signInWithPopup","GoogleAuthProvider","onAuthStateChanged","useFirebase","user","setUser","error","setError","auth","googleProvider","signInUsingGoogle","then","result","console","log","catch","massage"],"mappings":";;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,wBAAP,MAAqC,2BAArC;AACA,SAASC,OAAT,EAAkBC,eAAlB,EAAmCC,kBAAnC,EAAuDC,kBAAvD,QAAiF,eAAjF;AAIAJ,wBAAwB;;AAExB,MAAMK,WAAW,GAAG,MAAM;AAAA;;AACtB,QAAM,CAACC,IAAD,EAAMC,OAAN,IAAiBR,QAAQ,CAAC,EAAD,CAA/B;AACA,QAAM,CAACS,KAAD,EAAOC,QAAP,IAAmBV,QAAQ,CAAC,EAAD,CAAjC;AAEA,QAAMW,IAAI,GAAGT,OAAO,EAApB;AACA,QAAMU,cAAc,GAAG,IAAIR,kBAAJ,EAAvB;;AACA,QAAMS,iBAAiB,GAAG,MAAM;AAC5BV,IAAAA,eAAe,CAACQ,IAAD,EAAOC,cAAP,CAAf,CACCE,IADD,CACMC,MAAM,IAAI;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,MAAM,CAACR,IAAnB;AACAC,MAAAA,OAAO,CAACO,MAAM,CAACR,IAAR,CAAP;AACH,KAJD,EAKCW,KALD,CAKQT,KAAK,IAAG;AACZC,MAAAA,QAAQ,CAACD,KAAK,CAACU,OAAP,CAAR;AACH,KAPD;AAQH,GATD;;AAWApB,EAAAA,SAAS,CAAE,MAAK;AACZM,IAAAA,kBAAkB,CAACM,IAAD,EAAQJ,IAAD,IAAW;AAChC,UAAIA,IAAJ,EAAU;AACNS,QAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AACAT,QAAAA,OAAO,CAACD,IAAD,CAAP;AACH;AACJ,KALiB,CAAlB;AAMH,GAPQ,EAON,EAPM,CAAT;AAQA,SAAM;AACFA,IAAAA,IADE;AAEFE,IAAAA,KAFE;AAGFI,IAAAA;AAHE,GAAN;AAKH,CA9BD;;GAAMP,W;;AAgCN,eAAeA,WAAf","sourcesContent":["import { useEffect, useState } from \"react\"\nimport initializeAuthentication from \"../Firebase/firebase.init\";\nimport { getAuth, signInWithPopup, GoogleAuthProvider, onAuthStateChanged } from \"firebase/auth\";\n\n\n\ninitializeAuthentication();\n\nconst useFirebase = () => {\n    const [user,setUser] = useState({});\n    const [error,setError] = useState('');\n\n    const auth = getAuth();\n    const googleProvider = new GoogleAuthProvider();\n    const signInUsingGoogle = () => {\n        signInWithPopup(auth, googleProvider)\n        .then(result => {\n            console.log(result.user);\n            setUser(result.user);\n        })\n        .catch (error=> {\n            setError(error.massage);\n        })\n    }\n\n    useEffect( ()=> {\n        onAuthStateChanged(auth, (user)  => {\n            if (user) {\n                console.log('inside state change ');\n                setUser(user);\n            }\n        })\n    }, []);\n    return{\n        user,\n        error,\n        signInUsingGoogle\n    }\n}\n\nexport default useFirebase ;"]},"metadata":{},"sourceType":"module"}